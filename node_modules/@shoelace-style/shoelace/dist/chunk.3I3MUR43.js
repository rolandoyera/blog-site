import {
  Shoemaker,
  html
} from "./chunk.HODVHBF3.js";

// _ccwmwdlsd:/Users/claviska/Projects/shoelace/src/components/button-group/button-group.scss
var button_group_default = ":host {\n  position: relative;\n  box-sizing: border-box;\n}\n:host *, :host *:before, :host *:after {\n  box-sizing: inherit;\n}\n\n:host {\n  display: inline-block;\n}\n\n.button-group {\n  display: flex;\n  flex-wrap: nowrap;\n  position: relative;\n}\n\n::slotted(.sl-hover) {\n  z-index: 1;\n}\n\n::slotted(.sl-focus) {\n  z-index: 2;\n}";

// src/components/button-group/button-group.ts
var SlButtonGroup = class extends Shoemaker {
  constructor() {
    super(...arguments);
    this.label = "";
  }
  onReady() {
    this.handleFocus = this.handleFocus.bind(this);
    this.handleBlur = this.handleBlur.bind(this);
    this.buttonGroup.addEventListener("sl-focus", this.handleFocus);
    this.buttonGroup.addEventListener("sl-blur", this.handleBlur);
  }
  onDisconnect() {
    this.buttonGroup.removeEventListener("sl-focus", this.handleFocus);
    this.buttonGroup.removeEventListener("sl-blur", this.handleBlur);
  }
  handleFocus(event) {
    const button = event.target;
    button.classList.add("sl-focus");
  }
  handleBlur(event) {
    const button = event.target;
    button.classList.remove("sl-focus");
  }
  render() {
    return html`
      <div
        ref=${(el) => this.buttonGroup = el}
        part="base"
        class="button-group"
        aria-label=${this.label}
      >
        <slot />
      </div>
    `;
  }
};
SlButtonGroup.tag = "sl-button-group";
SlButtonGroup.props = ["label"];
SlButtonGroup.styles = button_group_default;
var button_group_default2 = SlButtonGroup;

export {
  button_group_default2 as button_group_default
};
